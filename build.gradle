import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.bmuschko.docker-remote-api' version "$dockerVersion" apply false

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.4'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.seleniumhq.selenium:selenium-java:4.19.1'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'
    implementation 'org.mapstruct:mapstruct:1.6.2'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'


}

tasks.register('dockerFile', Dockerfile) {
    dependsOn['assemble']
    destFile.set(project.file('Dockerfile'))
    from "openjdk:17"
    copyFile "build/libs/${project.name}-${project.version}.jar", '/app/'
    workingDir "/app/"
    entryPoint "java"
    defaultCommand "-jar", "/app/${project.name}-${project.version}.jar"
}

tasks.register('dockerImage', Exec) {
    dependsOn dockerFile
    commandLine "docker", "buildx", "build", "--platform", "linux/arm64,linux/amd64", "-t", "$dockerPrefix/$projectName:$imageVersion", "--push", "."

}

tasks.named('test') {
    useJUnitPlatform()
}
